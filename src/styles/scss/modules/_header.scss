@use "../abstracts/variables/_index" as *;
@use "../abstracts/functions/_index" as *;
@use "../abstracts/mixins/_index" as *;

@mixin create-header {
  header {
    block-size: var(--header_height, calc(100svb - var(--nav_height)));

    &:empty {
      display: none;
    }
  }

  .intro {
    @supports (view-timeline-name: --foo) {
      animation: header-content-fade-out forwards;
      animation-range-start: exit;
      animation-timeline: view();
      will-change: translate, opacity;
    }

    @include mq-reduce-motion {
      animation: none;
    }

    &__title {
      position: relative;
      text-shadow: 
        -2px 0 var(--color-pink),
        2px 0 var(--color-torquoise);
      animation: show-title-glitch 0.5s ease-out 0.35s forwards;

      @include mq-reduce-motion {
        opacity: initial;
        text-shadow: none;
        animation: none;
        scale: initial;
      }

      // Glitch effect applied directly to title
      &:before,
      &:after {
        content: attr(data-glitch);
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        width: 100%;
        height: 100%;
        opacity: 0.8;
        font-size: inherit;
        font-weight: inherit;
        line-height: inherit;
        letter-spacing: inherit;
        text-align: inherit;
        white-space: pre-line;
        overflow: hidden;
        z-index: -1;
        clip: rect(0, attr(data-width px), attr(data-height px), 0);
        pointer-events: none;
        -webkit-text-stroke: 0;
        
        // Fallback for browsers that don't support typed attr()
        @supports not (width: attr(data-width px)) {
          display: none;
        }
      }

      &::before {
        left: 2px;
        animation: noise-anim 2s infinite linear alternate-reverse;
      }

      &::after {
        left: -2px;
        animation: noise-anim-2 3s infinite linear alternate-reverse;
      }
    }

    &__subtitle {
      opacity: 0;
      letter-spacing: 0.25em;
      animation: show-subtitle 0.5s ease-out 0.7s forwards;
      translate: 0 -25%;

      @include mq-reduce-motion {
        opacity: initial;
        animation: none;
        translate: initial;
      }
    }

    &__btn {
      opacity: 0;
      animation: show-button 0.5s ease-out 0.7s forwards;
      translate: 0 50%;

      @include mq-reduce-motion {
        opacity: initial;
        animation: none;
        translate: initial;
      }
    }
  }

  @keyframes show-triangle {
    to {
      translate: 0 0;
    }
  }

  @keyframes triangle-exit {
    to {
      opacity: 1;
      scale: 2;
    }
  }

  @keyframes show-title {
    to {
      opacity: 1;
      scale: 1;
    }
  }

  @keyframes show-title-glitch {
    0% {
      opacity: 0;
      scale: 0.5;
    }
    60% {
      opacity: 0.8;
      scale: 1.1;
    }
    80% {
      opacity: 0.9;
      scale: 0.98;
    }
    100% {
      opacity: 1;
      scale: 1;
    }
  }

  @keyframes show-subtitle {
    to {
      opacity: 1;
      translate: 0 0;
    }
  }

  @keyframes show-button {
    to {
      opacity: 1;
      translate: 0 0;
    }
  }

  @keyframes header-content-fade-out {
    to {
      opacity: 0;
      translate: 0 -20svb;
      scale: 1.2;
    }
  }

  @keyframes glitch-color {
    0% {
      transform: translate(0);
    }

    20% {
      transform: translate(-3px, 3px);
    }

    40% {
      transform: translate(-3px, -3px);
    }

    60% {
      transform: translate(3px, 3px);
    }

    80% {
      transform: translate(3px, -3px);
    }

    to {
      transform: translate(0);
    }
  }

  @keyframes noise-anim {
    0% {
      clip: rect(calc(attr(data-height px) * 0.0), attr(data-width px), calc(attr(data-height px) * 0.2), 0);
    }
    5% {
      clip: rect(calc(attr(data-height px) * 0.3), attr(data-width px), calc(attr(data-height px) * 0.6), 0);
    }
    10% {
      clip: rect(calc(attr(data-height px) * 0.1), attr(data-width px), calc(attr(data-height px) * 0.4), 0);
    }
    15% {
      clip: rect(calc(attr(data-height px) * 0.5), attr(data-width px), calc(attr(data-height px) * 0.8), 0);
    }
    20% {
      clip: rect(calc(attr(data-height px) * 0.2), attr(data-width px), calc(attr(data-height px) * 0.7), 0);
    }
    25% {
      clip: rect(calc(attr(data-height px) * 0.4), attr(data-width px), calc(attr(data-height px) * 0.9), 0);
    }
    30% {
      clip: rect(calc(attr(data-height px) * 0.6), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    35% {
      clip: rect(calc(attr(data-height px) * 0.15), attr(data-width px), calc(attr(data-height px) * 0.55), 0);
    }
    40% {
      clip: rect(calc(attr(data-height px) * 0.35), attr(data-width px), calc(attr(data-height px) * 0.85), 0);
    }
    45% {
      clip: rect(calc(attr(data-height px) * 0.7), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    50% {
      clip: rect(calc(attr(data-height px) * 0.0), attr(data-width px), calc(attr(data-height px) * 0.3), 0);
    }
    55% {
      clip: rect(calc(attr(data-height px) * 0.45), attr(data-width px), calc(attr(data-height px) * 0.75), 0);
    }
    60% {
      clip: rect(calc(attr(data-height px) * 0.25), attr(data-width px), calc(attr(data-height px) * 0.65), 0);
    }
    65% {
      clip: rect(calc(attr(data-height px) * 0.55), attr(data-width px), calc(attr(data-height px) * 0.95), 0);
    }
    70% {
      clip: rect(calc(attr(data-height px) * 0.05), attr(data-width px), calc(attr(data-height px) * 0.45), 0);
    }
    75% {
      clip: rect(calc(attr(data-height px) * 0.75), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    80% {
      clip: rect(calc(attr(data-height px) * 0.3), attr(data-width px), calc(attr(data-height px) * 0.8), 0);
    }
    85% {
      clip: rect(calc(attr(data-height px) * 0.1), attr(data-width px), calc(attr(data-height px) * 0.6), 0);
    }
    90% {
      clip: rect(calc(attr(data-height px) * 0.65), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    95% {
      clip: rect(calc(attr(data-height px) * 0.0), attr(data-width px), calc(attr(data-height px) * 0.35), 0);
    }
    100% {
      clip: rect(calc(attr(data-height px) * 0.8), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
  }

  @keyframes noise-anim-2 {
    0% {
      clip: rect(calc(attr(data-height px) * 0.4), attr(data-width px), calc(attr(data-height px) * 0.9), 0);
    }
    5% {
      clip: rect(calc(attr(data-height px) * 0.1), attr(data-width px), calc(attr(data-height px) * 0.5), 0);
    }
    10% {
      clip: rect(calc(attr(data-height px) * 0.6), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    15% {
      clip: rect(calc(attr(data-height px) * 0.2), attr(data-width px), calc(attr(data-height px) * 0.7), 0);
    }
    20% {
      clip: rect(calc(attr(data-height px) * 0.8), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    25% {
      clip: rect(calc(attr(data-height px) * 0.0), attr(data-width px), calc(attr(data-height px) * 0.4), 0);
    }
    30% {
      clip: rect(calc(attr(data-height px) * 0.5), attr(data-width px), calc(attr(data-height px) * 0.85), 0);
    }
    35% {
      clip: rect(calc(attr(data-height px) * 0.15), attr(data-width px), calc(attr(data-height px) * 0.6), 0);
    }
    40% {
      clip: rect(calc(attr(data-height px) * 0.7), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    45% {
      clip: rect(calc(attr(data-height px) * 0.25), attr(data-width px), calc(attr(data-height px) * 0.75), 0);
    }
    50% {
      clip: rect(calc(attr(data-height px) * 0.45), attr(data-width px), calc(attr(data-height px) * 0.95), 0);
    }
    55% {
      clip: rect(calc(attr(data-height px) * 0.05), attr(data-width px), calc(attr(data-height px) * 0.55), 0);
    }
    60% {
      clip: rect(calc(attr(data-height px) * 0.65), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    65% {
      clip: rect(calc(attr(data-height px) * 0.3), attr(data-width px), calc(attr(data-height px) * 0.8), 0);
    }
    70% {
      clip: rect(calc(attr(data-height px) * 0.0), attr(data-width px), calc(attr(data-height px) * 0.35), 0);
    }
    75% {
      clip: rect(calc(attr(data-height px) * 0.55), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    80% {
      clip: rect(calc(attr(data-height px) * 0.35), attr(data-width px), calc(attr(data-height px) * 0.85), 0);
    }
    85% {
      clip: rect(calc(attr(data-height px) * 0.75), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    90% {
      clip: rect(calc(attr(data-height px) * 0.1), attr(data-width px), calc(attr(data-height px) * 0.6), 0);
    }
    95% {
      clip: rect(calc(attr(data-height px) * 0.9), attr(data-width px), calc(attr(data-height px) * 1.0), 0);
    }
    100% {
      clip: rect(calc(attr(data-height px) * 0.0), attr(data-width px), calc(attr(data-height px) * 0.3), 0);
    }
  }
}
