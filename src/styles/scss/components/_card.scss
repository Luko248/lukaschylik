@use "../abstracts/variables/_index" as *;
@use "../abstracts/functions/_index" as *;
@use "../abstracts/mixins/_index" as *;

@mixin create-card {
  @property --gradient-angle {
    inherits: false;
    initial-value: 0deg;
    syntax: "<angle>";
  }

  .card {
    transition: border-color .25s ease-in-out;
    overflow-clip-margin: 0.5rem;

    @include mq-hover {
      --card-before_trans-y: -100%;
      --card-after_trans-y: 0;
      --card-after_opacity: 1;
      border-color: transparent !important;
    }

    &:not(:hover) {
      @include mq-responsive(table, min) {
        --anim-state: paused;
      }
    }

    &:after {
      content: "";
      position: absolute;
      inset: -0.4rem;
      background-image: conic-gradient(
        from var(--gradient-angle),
        var(--color-turquoise-300),
        var(--color-turquoise-500),
        var(--color-purple-300),
        var(--color-purple-500),
        var(--color-purple-700),
        var(--color-purple-500),
        var(--color-purple-300),
        var(--color-turquoise-500),
        var(--color-turquoise-300)
      );
      opacity: var(--card-after_opacity, 0);
      animation: rotateGradient 3s linear infinite;
      animation-play-state: var(--anim-state, initial);
      transition: opacity .25s ease-in-out;
      z-index: -1;
    }

    h3 {
      position: relative;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      text-wrap: ballanced;
      white-space: pre-line;
      overflow: clip;

      &:before,
      &:after {
        content: attr(title);
        position: absolute;
        inset: 0;
        display: block;
        padding: inherit !important;
        font: inherit;
        text-align: inherit;
        text-wrap: pretty;
        transition: translate $trans-time $trans-fnc;
        z-index: 1;

        @include mq-responsive(tablet) {
          display: none;
        }

        @include mq-hover(none) {
          display: none;
        }
      }

      &:before {
        background-color: light-dark(var(--color-white), var(--color-black));
        color: light-dark(var(--color-black), var(--color-white));
        translate: 0 var(--card-before_trans-y, 0);
        z-index: 1;
      }

      &:after {
        background-color: light-dark(var(--color-yellow-500), var(--color-black));
        color: light-dark(var(--color-black), var(--color-yellow-500));
        translate: 0 var(--card-after_trans-y, 100%);
        z-index: 2;
      }
    }

    ul li {
      list-style-type: disc;

      &::marker {
        content: attr(data-marker);
      }
    }

    p {
      text-wrap: ballanced;
      text-wrap: pretty;
    }

    @keyframes rotateGradient {
      to {
        --gradient-angle: 1turn;
      }
    }
  }
}
